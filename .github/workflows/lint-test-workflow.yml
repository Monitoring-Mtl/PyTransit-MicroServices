name: Lint and test

on:
  workflow_call:
    inputs:
      deploy:
        description: 'Deploy to GitHub Pages (true/false)'
        required: false
        default: 'false'
        type: string

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r tests/requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --max-line-length=127 --statistics --exclude=.aws-sam

  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r tests/requirements.txt

      - name: Run tests with coverage
        run: pytest tests/ --cov=./ --cov-report=xml
      
      - name: Find coverage.xml
        run: find . -name 'coverage.xml' -exec ls -l {} \;
    
  deployment:
    if: ${{ inputs.deploy == 'true' }}
    needs: [linting, testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure pages
        uses: actions/configure-pages@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: List files
        run: ls -l ./ 

      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v1
        with:
          name: test-coverage
          path: ././coverage.xml

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          artifact_name: test-coverage
